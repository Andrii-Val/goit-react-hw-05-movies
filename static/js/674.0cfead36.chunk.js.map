{"version":3,"file":"static/js/674.0cfead36.chunk.js","mappings":"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","sources":["api/api.js","components/MovieListItem/MovieListItem.styled.js","components/MovieListItem/MovieListItem.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/TitleHome/TitleHome.styled.js","components/TitleHome/TitleHome.js","pages/Home.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwNzkyZGRjZDY0Y2Q1YzFlOTQ4NDhiODE3OGFjZjNmNyIsInN1YiI6IjY0ZjI0ODU3NWYyYjhkMDBhYmM5YzYzMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RjHZG0nm_SvGYBgxulpG0lDE4BQDW-1ee24-kukqTQo';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n};\n\nexport const fetchMoviesById = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const fetchSearchMovies = async (page, query) => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      include_adult: false,\n      query: query,\n      page: page,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchCastMovie = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const fetchReviewsMovie = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  color: inherit;\n`;\n\nexport const NameMovie = styled.h2`\n  font-size: 18px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { NameMovie, StyledLink } from './MovieListItem.styled';\n\nexport const MovieListItem = ({ movie }) => {\n  const location = useLocation();\n  const index = movie.release_date.indexOf('-');\n  const yearRelese = movie.release_date.slice(0, index);\n\n  return (\n    <div key={movie.id}>\n      <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        {movie.poster_path ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            alt=\"movie poster\"\n            loading=\"lazy\"\n          />\n        ) : (\n          <img\n            src={'https://via.placeholder.com/250x375'}\n            alt=\"movie poster\"\n            loading=\"lazy\"\n          />\n        )}\n\n        <NameMovie>\n          {movie.title} ({yearRelese})\n        </NameMovie>\n      </StyledLink>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1050px;\n  margin: 0 auto;\n  padding: 0 10px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-bottom: 40px;\n`;\n\nexport const Item = styled.li`\n  width: 250px;\n`;","import { MovieListItem } from 'components/MovieListItem/MovieListItem';\nimport { Container, List, Item } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <Container>\n      <List>\n        {movies.map(movie => (\n          <Item key={movie.id}>\n            <MovieListItem movie={movie} />\n          </Item>\n        ))}\n      </List>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TitleContainer = styled.div`\n  width: 1050px;\n  margin: 0 auto;\n  padding: 10px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 22px;\n  font-weight: 500;\n  color: green;\n`;","import { TitleContainer, Title } from './TitleHome.styled';\n\nexport const TitleHome = () => {\n  return (\n    <TitleContainer>\n      <Title>Trending today</Title>\n    </TitleContainer>\n  );\n};","import { useEffect, useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { fetchTrendingMovies } from 'api/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Spiner } from 'components/Spinner/Spiner';\nimport { TitleHome } from 'components/TitleHome/TitleHome';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function getTrendingMovies() {\n      try {\n        setLoading(true);\n        const { results } = await fetchTrendingMovies();\n        setMovies(results);\n      } catch (error) {\n        toast.error(`Oops, ${error}. Please try again.`);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getTrendingMovies();\n  }, []);\n\n  return (\n    <div>\n      <TitleHome />\n      {loading && <Spiner />}\n      {movies && <MoviesList movies={movies} />}\n      <Toaster />\n    </div>\n  );\n};\n\nexport default Home;"],"names":["axios","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","sent","abrupt","data","stop","apply","arguments","fetchMoviesById","_ref2","_callee2","id","_context2","concat","_x","fetchSearchMovies","_ref3","_callee3","page","query","_context3","params","include_adult","_x2","_x3","fetchCastMovie","_ref4","_callee4","_context4","_x4","fetchReviewsMovie","_ref5","_callee5","_context5","_x5","StyledLink","styled","NavLink","_templateObject","_taggedTemplateLiteral","NameMovie","_templateObject2","MovieListItem","movie","location","useLocation","index","release_date","indexOf","yearRelese","slice","_jsx","children","_jsxs","to","state","from","poster_path","src","alt","loading","title","Container","List","Item","_templateObject3","MoviesList","movies","map","TitleContainer","Title","TitleHome","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","setLoading","useEffect","_getTrendingMovies","_yield$fetchTrendingM","results","t0","toast","finish","getTrendingMovies","Spiner","Toaster"],"sourceRoot":""}