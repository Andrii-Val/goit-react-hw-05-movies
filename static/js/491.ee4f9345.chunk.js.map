{"version":3,"file":"static/js/491.ee4f9345.chunk.js","mappings":"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","sources":["api/api.js","components/MovieCard/MovieCard.style.js","components/MovieCard/MovieCard.js","components/GoBackBtn/GoBackBtn.styled.js","components/GoBackBtn/GoBackBtn.js","components/AdditionalInfo/AdditionalInfo.styled.js","components/AdditionalInfo/AdditionalInfo.js","pages/SelectedMovie.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwNzkyZGRjZDY0Y2Q1YzFlOTQ4NDhiODE3OGFjZjNmNyIsInN1YiI6IjY0ZjI0ODU3NWYyYjhkMDBhYmM5YzYzMSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RjHZG0nm_SvGYBgxulpG0lDE4BQDW-1ee24-kukqTQo';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n};\n\nexport const fetchMoviesById = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const fetchSearchMovies = async (page, query) => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      include_adult: false,\n      query: query,\n      page: page,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchCastMovie = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const fetchReviewsMovie = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1050px;\n  margin: 0 auto;\n  padding: 0 10px;\n`;\n\nexport const NameMovie = styled.h1`\n  margin-bottom: 10px;\n`;\n\nexport const CardContainer = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Subtitle = styled.span`\n  font-weight: bold;\n`;\n\nexport const MovieInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  gap: 5px;\n`;\n\nexport const GenresList = styled.div`\n  display: flex;\n  gap: 7px;\n`;","import {\n    CardContainer,\n    Container,\n    Genres,\n    GenresList,\n    MovieInfo,\n    NameMovie,\n    Subtitle,\n  } from './MovieCard.style';\n  \n  export const MovieCard = ({ movie }) => {\n    const index = movie.release_date.indexOf('-');\n    const yearRelese = movie.release_date.slice(0, index);\n    const genres = movie.genres;\n    return (\n      <Container>\n        <NameMovie>\n          {movie.original_title} ({yearRelese})\n        </NameMovie>\n        <CardContainer>\n          {movie.poster_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt=\"movie poster\"\n              loading=\"lazy\"\n              width={250}\n            />\n          ) : (\n            <img\n              src={'https://via.placeholder.com/250x375'}\n              alt=\"movie poster\"\n              loading=\"lazy\"\n            />\n          )}\n  \n          <MovieInfo>\n            <li>\n              <p>\n                <Subtitle>Release date:</Subtitle> {movie.release_date}\n              </p>\n            </li>\n            <li>\n              <Genres>\n                <Subtitle>Genres:</Subtitle>\n                <GenresList>\n                  {genres.map(genre => (\n                    <li key={genre.id}>{genre.name}</li>\n                  ))}\n                </GenresList>\n              </Genres>\n            </li>\n            <li>\n              <p>\n                <Subtitle>Runtime:</Subtitle> {movie.runtime} min.\n              </p>\n            </li>\n            <li>\n              <p>\n                <Subtitle>Tagline:</Subtitle> {movie.tagline}\n              </p>\n            </li>\n            <li>\n              <p>\n                <Subtitle>Overview:</Subtitle> {movie.overview}\n              </p>\n            </li>\n          </MovieInfo>\n        </CardContainer>\n      </Container>\n    );\n  };","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1050px;\n  margin: 0 auto;\n  padding: 0 10px;\n`;\n\nexport const Button = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  border: 1px solid #000;\n  border-radius: 15px;\n  width: 100px;\n  margin: 10px 0;\n  font-size: 16px;\n  font-weight: 500;\n  &:hover,\n  :focus {\n    background-color: green;\n  }\n`;","import { BsArrowLeft } from 'react-icons/bs';\nimport { Button, Container } from './GoBackBtn.styled';\n\nexport const GoBackBtn = () => {\n  return (\n    <Container>\n      <Button>\n        <BsArrowLeft />\n        <p>Go back</p>\n      </Button>\n    </Container>\n  );\n};","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  width: 1050px;\n  margin: 0 auto;\n  padding: 0 10px;\n`;\n\nexport const SubTitle = styled.h3`\n  margin-top: 20px;\n`;\n\nexport const List = styled.ul`\n  margin-top: 10px;\n  display: flex;\n  gap: 15px;\n`;\n\n\nexport const StyledLink = styled(NavLink)`\n  border: 1px solid #000;\n  border-radius: 15px;\n  width: 100%;\n  font-size: 16px;\n  font-weight: 500;\n  text-align: center;\n  padding: 5px 10px;\n  &:hover,\n  :focus {\n    background-color: green;\n  }\n  &.active {\n    background-color: green;\n  }\n`;","import { Outlet } from 'react-router-dom';\nimport { Container, List, StyledLink, SubTitle } from './AdditionalInfo.styled';\n\nexport const AdditionalInfo = () => {\n  return (\n    <Container>\n      <SubTitle>Additional information</SubTitle>\n      <List>\n        <li>\n          <StyledLink to={`cast`}>Cast</StyledLink>\n        </li>\n        <li>\n          <StyledLink to={`reviews`}>Reviews</StyledLink>\n        </li>\n      </List>\n      <Outlet />\n    </Container>\n  );\n};","import { Link, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { fetchMoviesById } from 'api/api';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { GoBackBtn } from 'components/GoBackBtn/GoBackBtn';\nimport { AdditionalInfo } from 'components/AdditionalInfo/AdditionalInfo';\nimport { Spiner } from 'components/Spinner/Spiner';\n\nconst SelectedMovie = () => {\n  const location = useLocation();\n  const backLinkHrefRef = useRef(location.state?.from ?? '/movies');\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function getTrendingMovies() {\n      try {\n        setLoading(true);\n        const data = await fetchMoviesById(movieId);\n        setMovie(data);\n      } catch (error) {\n        toast.error(`Oops, ${error}. Please try again.`);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getTrendingMovies();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLinkHrefRef.current}>\n        <GoBackBtn />\n      </Link>\n      {loading && <Spiner />}\n      {movie && <MovieCard movie={movie} />}\n      <AdditionalInfo />\n      <Toaster />\n    </div>\n  );\n};\n\nexport default SelectedMovie;"],"names":["axios","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","sent","abrupt","data","stop","apply","arguments","fetchMoviesById","_ref2","_callee2","id","_context2","concat","_x","fetchSearchMovies","_ref3","_callee3","page","query","_context3","params","include_adult","_x2","_x3","fetchCastMovie","_ref4","_callee4","_context4","_x4","fetchReviewsMovie","_ref5","_callee5","_context5","_x5","Container","styled","_templateObject","_taggedTemplateLiteral","NameMovie","_templateObject2","CardContainer","_templateObject3","Subtitle","_templateObject4","MovieInfo","_templateObject5","Genres","_templateObject6","GenresList","_templateObject7","MovieCard","movie","index","release_date","indexOf","yearRelese","slice","genres","_jsxs","children","original_title","poster_path","_jsx","src","alt","loading","width","map","genre","name","runtime","tagline","overview","Button","GoBackBtn","BsArrowLeft","SubTitle","List","StyledLink","NavLink","AdditionalInfo","to","Outlet","_location$state$from","_location$state","location","useLocation","backLinkHrefRef","useRef","state","from","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","setLoading","useEffect","_getTrendingMovies","t0","toast","finish","getTrendingMovies","Link","current","Spiner","Toaster"],"sourceRoot":""}